
	//-- Globals
	
	var gRAPs = null;
	
	//-- Developing
	//var gURLApp = "https://dipdev.up.edu.mx/saludup";
	//var gDebug = true;
	
	//-- Production
	var gURLApp = "https://saludup.up.edu.mx";
	var gDebug = false;
	
	var gVersion = "01.00.17"
	
	//var gInstanceType = "app";
	var gInstanceType = "web";
	
	var gNotiLoop = 1000 * 60 * 1; // Cada minuto
	
	var gIDNot = 0;
	
	var gIntId = 0;
	
	var gAndroidMinVer = 9.0;
	
	
	//-- TIM
	
	function prTIMReplace(pTemplate, pData) 
	{
		var lID = pData['pID'];
		if (pData['pBody'] != null) {
			var lBody = tim(pData['pBody'], pData);
			pData['pBody'] = lBody;
		}
		var lHTML = tim(pTemplate, pData);
		$('#COMP_' + lID).replaceWith(lHTML);
	} // prTIMReplace
	
	function prTIMInsert(pTemplate, pData) 
	{
		var lID = pData['pID'];
		var lHTML = tim(pTemplate, pData);
		$('#COMP_' + lID).html(lHTML);
	} // prTIMInsert
	
	
	//-- View
	
	function prShowMssg(pID, pType, pTitle, pMssg)
	{
		$("#mssgs_" + pID).show();
		$("#mssgs_" + pID).html(
			'<div class="alert alert-' + pType + ' fade in"><a href="#" class="close" data-dismiss="alert">&times;</a><strong><span class="glyphicon glyphicon-' + pTitle + '"></span></strong>&nbsp;&nbsp;' + pMssg + '</div>'
		);
		$("#mssgs_" + pID).delay(3000).fadeOut();
	} // prShowMssg

	function prShowMssgNoAlert(pID, pType, pIcon, pTitle, pMssg, pWhere, pTime)
	{
		$("#mssgs_" + pID).show();
		$("#mssgs_" + pID).html(
			'<br>\
			<div class="alert alert-' + pType + ' alert-dismissible" role="alert">\
				<span type="button" class="close" data-dismiss="alert" aria-label="Cerrar">\
					<span aria-hidden="true">&times;</span>\
				</span>\
				<strong>\
					<i class="fas fa-' + pIcon + '"></i>\
					' + pTitle + '\
				</strong>\
				&nbsp;&nbsp;' + pMssg + '\
			</div>'
		);
		$("#mssgs_" + pID).delay(pTime).fadeOut();
		
		console.log(pTitle + ' | ' + pWhere + ' | ' + pMssg.replace(/<\/?[^>]+(>|$)/g, ""));
	} // prShowMssgNoAlert

	function prShowMssgAll_(pID, pType, pIcon, pTitle, pMssg, pWhere)
	{
		$.alert({
			title:
				'<span class="text-' + pType + '">\
					<strong>\
						<i class="fas fa-' + pIcon + '"></i>\
						' + pTitle + '\
					</strong>\
				</span>',
			content: 
				'<span class="text-primary">' + pMssg + '</span>'
		});
		prShowMssgNoAlert(pID, pType, pIcon, pTitle, pMssg, pWhere, 3000);
	} // prShowMssgAll_
	
	function prShowNConfirm(pType, pIcon, pTitle, pMssg, pWhere, pPostExec)
	{
		$.confirm({
			columnClass:	'xlarge',
			theme:			'bootstrap',
			title:
				'<span class="text-' + pType + '">\
					<strong>\
						<i class="fas fa-' + pIcon + '"></i>\
						' + pTitle + '\
					</strong>\
				</span>',
			content:		
				'<span class="text-primary">' + pMssg + '</span>',
			buttons:
			{
				OK: { action: function () {pPostExec();} }
			}
		});
		console.log(pTitle + ' | ' + pWhere + ' | ' + pMssg.replace(/<\/?[^>]+(>|$)/g, ""));
	} // prShowNConfirm
	
	function prShowMssgAll(pID, pType, pTitle, pMssg, pWhere)
	{
		$.alert({
			title:'<span class="text-' + pType + '"><b>' + pTitle + '</b></span>',
			content: pMssg
		});
		
		$("#mssgs_" + pID).show();
		$("#mssgs_" + pID).html(
			'<div class="alert alert-' + pType + ' fade in"><a href="#" class="close" data-dismiss="alert">&times;</a><strong><span class="glyphicon glyphicon-' + pTitle + '"></span></strong>&nbsp;&nbsp;' + pMssg + '</div>'
		);
		$("#mssgs_" + pID).delay(3000).fadeOut();
		
		console.log(pTitle + ' | ' + pWhere + ' | ' + pMssg.replace(/<\/?[^>]+(>|$)/g, ""));
	} // prShowMssgAll
	
	
	function prFillSelect(pID, pDef, pData)
	{
		$.each(pData, function(key, val) {
			$('#' + pID).append($('<option>', {value: val.id, text: val.text}));
		});
		$('#' + pID).val(pDef);
	} // prFillSelect

	
	//-- Variables functions
	
	function fnGetCredential(pWhich)
	{
		lItem = '';
		
		var lTItem = localStorage.getItem(pWhich);
		if ( (lTItem != null) && (lTItem != '') ) {
			lItem = sjcl.decrypt("@ghxkcnnr7NYl#lLtsNjeb$^0bX5O%", lTItem);
		}
		
		return lItem;
	} // fnGetCredential
	
	function fnGetUser()
	{
		return fnGetCredential('user');
	} // fnGetUser
	
	function fnGetPswd()
	{
		return fnGetCredential('pswd');
	} // fnGetPswd
	
	function fnGetTckt()
	{
		return fnGetCredential('tckt');
	} // fnGetTckt

	function fnGetRAPs()
	{
		return fnGetCredential('raps');
	} // fnGetRAPs
	
	function fnGetEmail()
	{
		return fnGetCredential('email');
	} // fnGetEmail
	
	function prSetCredential(pWhich, pVal)
	{
		var lItem = sjcl.encrypt("@ghxkcnnr7NYl#lLtsNjeb$^0bX5O%", pVal);
		localStorage.setItem(pWhich, lItem);
	} // prSetCredential

	function prSetVariable(pWhich, pVal)
	{
		localStorage.setItem(pWhich, pVal);
	}

	function prGetVariable(pWhich)
	{		
		var lTItem = localStorage.getItem(pWhich);
		return lTItem;
	} // fnGetCredential
	
	function prSetUser(pVal)
	{
		return prSetCredential('user', pVal);
	} // prSetUser
	
	function prSetPswd(pVal)
	{
		return prSetCredential('pswd', pVal);
	} // prSetPswd
	
	function prSetTckt(pVal)
	{
		return prSetCredential('tckt', pVal);
	} // prSetTckt
	
	function prSetRAPs(pVal)
	{
		return prSetCredential('raps', pVal);
	} // prSetRAPs
	
	function prSetEmail(pVal)
	{
		return prSetCredential('email', pVal);
	} // prSetEmail
	
	function fnGetPrivs(pRole, pPriv)
	{
		var lPrivs = null;
		
		gRAPs = JSON.parse(fnGetRAPs());
		if (gRAPs != null) {
			$.each(gRAPs, function(key01, val01) {
				if (val01.role == pRole) {
					
					$.each(val01.privs, function(key02, val02) {
						if (val02.priv == pPriv) {
							lPrivs = val02;
						};
					});
				};
			});
		}
		
		return lPrivs;
	} // fnGetPrivs
	
	function LogOff()
	{
		localStorage.clear();
		window.location.replace("index.html");
	} // LogOff
	
	
	//-- Ajax Calls

	function prAuthUserCB(pData)
	{
		 console.log('-----');
		 console.log(pData);
		// console.log('-----');
		lArr = jQuery.parseJSON(pData);
		switch (lArr.res) {
			case -1:
				prShowMssgAll('01', 'danger', 'Error', 'Comando desconocido.', 'prAuthUser');
				break;
			case -2:
				prShowMssgAll('01', 'danger', 'Error', 'Par&aacute;metro vac&iacute;o: ' + lArr.param , 'prAuthUser');
				break;
			case -3:
				prShowMssgAll('01', 'danger', 'Error', 'Uso incorrecto de ticket.', 'prAuthUser');
				prSetUser('');
				prSetPswd('');
				prSetTckt('');
				break;
			case -4:
				//prShowMssgAll('01', 'danger', 'Error', 'Credenciales inv&aacute;lidas.', 'prAuthUser');
				prSetUser('');
				prSetPswd('');
				prSetTckt('');
				LlamarLogIn('Y');
				break;
			case -5:
				prShowMssgAll('01', 'danger', 'Error', 'Usuario inactivo.', 'prAuthUser');
				prSetUser('');
				prSetPswd('');
				prSetTckt('');
				break;
			case 1:
				prSetTckt(lArr.tckt);
				localStorage.setItem('nombre_ldap',  lArr.nombre);
				if (localStorage.getItem('tipo_login') == 'External') {
					localStorage.setItem('ext_email',  fnGetUser());
				}
				//prSetRAPs(JSON.stringify(lArr.raps));
				//prSetEmail(lArr.email);
				//window.location.replace("mod_srol.html");
				break;
			case 2:
				prAuthUser();
				break;
		}
	} // prAuthUserCB
	
	function prAuthUser(pType = 'Normal')
	{
		localStorage.setItem('tipo_login',  pType);
		prExecutePOSTCall(
			{
				folio:		'no',
				action:		'act_auth',
				lUser:		fnGetUser(),
				pswd:		$.base64.encode(fnGetPswd()),
				pswd2:		fnGetPswd(),
				tckt:		fnGetTckt(),
				pType
			}, 
			prAuthUserCB, 'prAuthUserCB', gTimeOut, '01'
		);
	} // prAuthUser
	
	function prChkVer()
	{
		clearInterval(gIntId);
		if (gInstanceType == 'app') {
			if (device.platform == 'Android') {
				var lAVer = Number(device.version);
				if (lAVer < gAndroidMinVer) {
					$('#d_AndroidMinVer').show();
				}
			}
		}
	} // prChkVer
	
	function prCheckVersionCB(pData)
	{
		// console.log(pData);
		lArr = jQuery.parseJSON(pData);
		if (lArr.res == 1) {
			if (device.platform == 'iOS') {
				var lTmp = gVersion;
				var lVerLoc = lTmp.replace('.', '').replace('.', '');
				var lVLoc = Number(lVerLoc);
				var lTmp = lArr.ver;
				var lVerRem = lTmp.replace('.', '').replace('.', '');
				var lVRem = Number(lVerRem);
				// console.log(lVLoc, lVRem);
				if (lVLoc < lVRem) {
					$.alert({
						title:
							"<span class='text-danger'><b>Nueva versi&oacute;n disponible</b></span>",
						content: 
							"<br>Ya se encuentra disponible la nueva versi&oacute;n del producto.<br>\
							Favor de dar clic en el siguiente enlace:<br><br>\
							<a href='https://servicios.up.edu.mx/saludup/index.html' target='_new'>\
							<b><big>SALUDUP (V " + lArr.ver + ")</big></b>"
					});
				}
			}
		}
	} // prCheckVersionCB
	
	function prCheckVersion()
	{
		if (gInstanceType == 'app') {
			prExecutePOSTCall(
				{
					folio:		'no',
					action:		'act_getversion_alt'
				}, 
				prCheckVersionCB, 'prCheckVersionCB', gTimeOut, '01'
			);
		}
	} // prCheckVersion
	
	/*
	function prAskForCredentials(pSubTitle)
	{
		$.confirm({
			theme: 'light',
			title: 'Ingrese sus credenciales',
			content: pSubTitle +
			'<form action="" class="formName" autocomplete="off">' +
			'<div class="form-group">' +
			'<label>Usuario:</label>' +
			'<input type="text" id="user" class="form-control" required /><br>' +
			'<label>Contrase&ntilde;a:</label>' +
			'<input type="password" id="pswd" class="form-control" required /><br>' +
			'</div>' +
			'</form>',
			buttons: {
				formSubmit: {
					text: 'Ingresar',
					btnClass: 'btn-green',
					action: function () {
						var user = this.$content.find('#user').val();
						var pswd = this.$content.find('#pswd').val();
						if (user == '') {
							$.alert('Ingrese un usuario.');
							return false;
						} else 
						if (pswd == '') {
							$.alert('Ingrese una contrase&ntilde;a.');
							return false;
						} else {
							prSetUser(user);
							prSetPswd(pswd);
							var lUser = fnGetUser();
							var lPswd = fnGetPswd();
							prAuthUser();
						}
					}
				},
				cancel: {
					text: 'Cancelar',
					btnClass: 'btn-red',
					action: function() {
						var lUser = fnGetUser();
						var lPswd = fnGetPswd();
						if ( (lUser == '') || (lPswd == '') )
							prAskForCredentials('');
					}
				},
			},
			onContentReady: function () {
				// bind to events
				var jc = this;
				this.$content.find('form').on('submit', function (e) {
					// if the user submits the form by pressing enter in the field.
					e.preventDefault();
					jc.$$formSubmit.trigger('click'); // reference the button and click it
				});
				this.$content.find('#user').focus();
			}
		});
	} // psAskForCredentials
	*/
	
	function checkTckt()
	{
		var fATL_User = fnGetUser();
		var lTckt = fnGetTckt();
		
		$.post(gURLApp + "/srvBO.php",
		{
			action:	'act_authTckt',
			lUser:	fATL_User,
			tckt:	lTckt
		},
			function(data, status){
				lArr= jQuery.parseJSON(data);
				switch (lArr.res) {
					case 2:
						LogOff();
						return false;
						break;
					case 1:
						prSetTckt(lArr.tckt);
						return true;
					break;
				}
		});
	} // checkTckt
	
	function prChkTckt()
	{
		return checkTckt();
	} // prChkTckt
	
	//-- 
	
	function popUpMessageRedirec(title, message, location)
	{
		$.confirm({
			title: title,
			content: message,
			buttons: {
				Aceptar: function () {
					window.location.replace(location);
				}
			}
		});
	} // popUpMessageRedirec
	
	function popUpMessageAlert(title, message)
	{
		$.alert({
			title: title,
			content: message,
		});
	} // popUpMessageAlert
	
	if (gInstanceType == 'web') {
		function App() {
		  console.log('App constructor');
		}

		App.prototype.initialize = function() {
		  console.log('App initialized');
		};

		var app = new App();
	}
	
	$(document).ready(function () {
		$('#d_version').html("<b>" + gVersion + " | " + gInstanceType + "</b>");
		
		gIntId = setInterval(prChkVer, 1000);
		
		prCheckVersion();
	});
